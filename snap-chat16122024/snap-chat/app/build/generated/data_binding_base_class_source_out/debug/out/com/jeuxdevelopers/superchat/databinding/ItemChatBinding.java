// Generated by view binder compiler. Do not edit!
package com.jeuxdevelopers.superchat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jeuxdevelopers.superchat.R;
import com.vanniktech.emoji.EmojiTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemChatBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardImageLeft;

  @NonNull
  public final CardView cardImageRight;

  @NonNull
  public final ConstraintLayout chatLeftItem;

  @NonNull
  public final ConstraintLayout chatRightItem;

  @NonNull
  public final CircleImageView cvProfileLeft;

  @NonNull
  public final FrameLayout frameMsgLeft;

  @NonNull
  public final FrameLayout frameMsgRight;

  @NonNull
  public final ImageView ivLeft;

  @NonNull
  public final ImageView ivRight;

  @NonNull
  public final EmojiTextView tvMessageLeft;

  @NonNull
  public final EmojiTextView tvMessageRight;

  @NonNull
  public final TextView tvTimeLeft;

  @NonNull
  public final TextView tvTimeRight;

  private ItemChatBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardImageLeft,
      @NonNull CardView cardImageRight, @NonNull ConstraintLayout chatLeftItem,
      @NonNull ConstraintLayout chatRightItem, @NonNull CircleImageView cvProfileLeft,
      @NonNull FrameLayout frameMsgLeft, @NonNull FrameLayout frameMsgRight,
      @NonNull ImageView ivLeft, @NonNull ImageView ivRight, @NonNull EmojiTextView tvMessageLeft,
      @NonNull EmojiTextView tvMessageRight, @NonNull TextView tvTimeLeft,
      @NonNull TextView tvTimeRight) {
    this.rootView = rootView;
    this.cardImageLeft = cardImageLeft;
    this.cardImageRight = cardImageRight;
    this.chatLeftItem = chatLeftItem;
    this.chatRightItem = chatRightItem;
    this.cvProfileLeft = cvProfileLeft;
    this.frameMsgLeft = frameMsgLeft;
    this.frameMsgRight = frameMsgRight;
    this.ivLeft = ivLeft;
    this.ivRight = ivRight;
    this.tvMessageLeft = tvMessageLeft;
    this.tvMessageRight = tvMessageRight;
    this.tvTimeLeft = tvTimeLeft;
    this.tvTimeRight = tvTimeRight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardImageLeft;
      CardView cardImageLeft = ViewBindings.findChildViewById(rootView, id);
      if (cardImageLeft == null) {
        break missingId;
      }

      id = R.id.cardImageRight;
      CardView cardImageRight = ViewBindings.findChildViewById(rootView, id);
      if (cardImageRight == null) {
        break missingId;
      }

      id = R.id.chatLeftItem;
      ConstraintLayout chatLeftItem = ViewBindings.findChildViewById(rootView, id);
      if (chatLeftItem == null) {
        break missingId;
      }

      id = R.id.chat_right_item;
      ConstraintLayout chatRightItem = ViewBindings.findChildViewById(rootView, id);
      if (chatRightItem == null) {
        break missingId;
      }

      id = R.id.cvProfileLeft;
      CircleImageView cvProfileLeft = ViewBindings.findChildViewById(rootView, id);
      if (cvProfileLeft == null) {
        break missingId;
      }

      id = R.id.frame_msg_left;
      FrameLayout frameMsgLeft = ViewBindings.findChildViewById(rootView, id);
      if (frameMsgLeft == null) {
        break missingId;
      }

      id = R.id.frame_msg_right;
      FrameLayout frameMsgRight = ViewBindings.findChildViewById(rootView, id);
      if (frameMsgRight == null) {
        break missingId;
      }

      id = R.id.ivLeft;
      ImageView ivLeft = ViewBindings.findChildViewById(rootView, id);
      if (ivLeft == null) {
        break missingId;
      }

      id = R.id.ivRight;
      ImageView ivRight = ViewBindings.findChildViewById(rootView, id);
      if (ivRight == null) {
        break missingId;
      }

      id = R.id.tvMessageLeft;
      EmojiTextView tvMessageLeft = ViewBindings.findChildViewById(rootView, id);
      if (tvMessageLeft == null) {
        break missingId;
      }

      id = R.id.tvMessageRight;
      EmojiTextView tvMessageRight = ViewBindings.findChildViewById(rootView, id);
      if (tvMessageRight == null) {
        break missingId;
      }

      id = R.id.tvTimeLeft;
      TextView tvTimeLeft = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeLeft == null) {
        break missingId;
      }

      id = R.id.tvTimeRight;
      TextView tvTimeRight = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeRight == null) {
        break missingId;
      }

      return new ItemChatBinding((ConstraintLayout) rootView, cardImageLeft, cardImageRight,
          chatLeftItem, chatRightItem, cvProfileLeft, frameMsgLeft, frameMsgRight, ivLeft, ivRight,
          tvMessageLeft, tvMessageRight, tvTimeLeft, tvTimeRight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
